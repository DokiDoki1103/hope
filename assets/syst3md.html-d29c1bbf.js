import{_ as a,W as s,X as e,a2 as n}from"./framework-3c1374b9.js";const i="/hope/assets/img-4b978c15.png",t="/hope/assets/img_1-5641a846.png",r="/hope/assets/img_2-507e93f9.png",c="/hope/assets/img_3-1a3ef3c1.png",d="/hope/assets/img_5-c1f886fa.png",o={},l=n('<h1 id="被植入木马syst3md挖矿" tabindex="-1"><a class="header-anchor" href="#被植入木马syst3md挖矿" aria-hidden="true">#</a> 被植入木马Syst3md挖矿</h1><p>由于种种原因，需要自己搭建服务器，于是买来了硬件，托管在朋友家中，委托他帮忙装系统，然后他装好了系统之后，随手将root密码设置成了xiaoming，并且还有一个新用户也叫做xiaoming。隐患就此开始...</p><h2 id="第一次发现木马" tabindex="-1"><a class="header-anchor" href="#第一次发现木马" aria-hidden="true">#</a> 第一次发现木马</h2><p>由于被挖矿，导致elasticsearch宕机了，我去重启es发现无法启动，诡异的事情发生了。 <img src="'+i+'" alt="img.png" loading="lazy"> 于是执行了<code>top</code>命令,查看被一个莫名的应用占满了CPU。 <img src="'+t+'" alt="img_1.png" loading="lazy"> 毫无疑问我的服务器被挖矿了，赶快去删除掉他</p><h2 id="开始尝试删除" tabindex="-1"><a class="header-anchor" href="#开始尝试删除" aria-hidden="true">#</a> 开始尝试删除</h2><p>查看是否有登陆日志，其中确实有两条未知用户通过xiaoming来登陆我的服务器 <img src="'+r+'" alt="img_2.png" loading="lazy"> 这时候黑客往往会配置ssh免密登陆，防止我修改密码，快去root目录看下有没有.ssh文件 <img src="'+c+`" alt="img_3.png" loading="lazy"> 真的有，赶紧删除掉</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /root/.ssh
<span class="token function">sudo</span> chattr <span class="token parameter variable">-i</span> authorized_keys
<span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> authorized_keys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">注意</p><p>-i 是chattr命令的选项，表示将文件设置为不可改写（immutable）。当文件被标记为不可改写时，任何尝试修改或删除该文件的操作都将受到限制，即使以超级用户权限运行也无法更改它</p></div><p>这时候发现前面删除的木马程序又运行回来了，感觉一定是定时任务，赶紧去看看定时任务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>他把我所有的定时任务都删除了，然后添加了他自己的定时任务，真可恶 <img src="`+d+`" alt="img_5.png" loading="lazy"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将它的所有定时任务注释掉，看看还是否会定时执行。 果不其然，又重新给我写了配置文件。</p><h2 id="寻找后门-控制写定时文件的" tabindex="-1"><a class="header-anchor" href="#寻找后门-控制写定时文件的" aria-hidden="true">#</a> 寻找后门(控制写定时文件的)</h2><p>一定有后门，一直在循环反复的写定时任务，只能找到这个最后的元凶，才有可能解决这个问题。</p>`,15),p=[l];function h(m,g){return s(),e("div",null,p)}const _=a(o,[["render",h],["__file","syst3md.html.vue"]]);export{_ as default};
