import{_ as e,W as a,X as s,a2 as n}from"./framework-3c1374b9.js";const r={},t=n(`<h1 id="https证书-常见问题" tabindex="-1"><a class="header-anchor" href="#https证书-常见问题" aria-hidden="true">#</a> Https证书 常见问题</h1><h2 id="pfx格式转p12格式" tabindex="-1"><a class="header-anchor" href="#pfx格式转p12格式" aria-hidden="true">#</a> pfx格式转p12格式</h2><p>转换前后需要 源密码与新密码一致并且大于6位，如果源密码小于6位，可以参考下面方案重新设置密码。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># original.pfx 源pfx文件</span>
<span class="token comment"># new.p12 新的p12文件</span>
keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-destkeystore</span> new.p12 <span class="token parameter variable">-deststoretype</span> pkcs12 <span class="token parameter variable">-srckeystore</span> original.pfx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pfx格式密钥库修改密码" tabindex="-1"><a class="header-anchor" href="#pfx格式密钥库修改密码" aria-hidden="true">#</a> pfx格式密钥库修改密码</h2><p>有时候我们从阿里云或者腾讯云下载出来的证书的密码默认是4位，但是我们转换p12格式的时候，需要重新设置密码，如果重新设置的密码和源密码不一样，将会报错，并且最低要求我们重新设置6位密码。</p><p>1.pfx格式的密钥库不能直接用keytool修改私钥密码，需要先转成keystore</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># test.pfx:源文件</span>
<span class="token comment"># keystore.jks:新文件</span>
keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> test.pfx <span class="token parameter variable">-srcstoretype</span> PKCS12 <span class="token parameter variable">-deststoretype</span> JKS <span class="token parameter variable">-destkeystore</span> keystore.jks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.修改私钥密码，下边的库密码是上边转成的keystore.jks的库密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 原密码:不符合要求的密码，即最开始下载出来证书的密码</span>
<span class="token comment"># 新密码:我们要重新设置成符合规则的密码(大于6位)</span>
<span class="token comment"># 库密码:我们上一步转keystore时候设置的密码</span>
<span class="token comment"># bieming: 证书别名，默认大概率为域名例如：xxx.com,如果不知道就填写域名试一下，不行就问云厂商</span>
keytool <span class="token parameter variable">-keypasswd</span> <span class="token parameter variable">-alias</span> bieming <span class="token parameter variable">-keypass</span> 原密码 <span class="token parameter variable">-new</span> 新密码 <span class="token parameter variable">-storepass</span> 库密码  <span class="token parameter variable">-keystore</span> keystore.jks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.上一步结束后就是把库里的私钥密码修改了。最后把keystore转成pfx重新设置库密码即可(一般设置库密码和私钥密码一致)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># new.pfx:改完密码的新 pfx文件</span>
<span class="token comment"># keystore.jks:步骤一转换的文件</span>
keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> keystore.jks <span class="token parameter variable">-srcstoretype</span> JKS <span class="token parameter variable">-deststoretype</span> PKCS12 <span class="token parameter variable">-destkeystore</span> new.pfx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),p=[t];function i(l,o){return a(),s("div",null,p)}const d=e(r,[["render",i],["__file","certificate.html.vue"]]);export{d as default};
