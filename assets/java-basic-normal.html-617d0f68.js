const e=JSON.parse('{"key":"v-391c19ee","path":"/interview/java/java-basic-normal.html","title":"Java基础 - 常见考点","lang":"zh-CN","frontmatter":{"description":"== 和 equals 的区别 在Java中，\\"==\\"是一个运算符，用于比较两个变量是否引用同一个对象，而\\"equals\\"是Object类中的一个方法，用于比较两个对象是否相等。它们的区别如下 \\"==\\"比较的是两个变量的引用是否指向同一个对象，即比较它们的地址是否相同。而\\"equals\\"比较的是两个对象的内容是否相同，即比较它们的值是否相等。; \\"==...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/interview/java/java-basic-normal.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"Java基础 - 常见考点"}],["meta",{"property":"og:description","content":"== 和 equals 的区别 在Java中，\\"==\\"是一个运算符，用于比较两个变量是否引用同一个对象，而\\"equals\\"是Object类中的一个方法，用于比较两个对象是否相等。它们的区别如下 \\"==\\"比较的是两个变量的引用是否指向同一个对象，即比较它们的地址是否相同。而\\"equals\\"比较的是两个对象的内容是否相同，即比较它们的值是否相等。; \\"==..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-10T15:49:54.000Z"}],["meta",{"property":"article:author","content":"DokiDoki"}],["meta",{"property":"article:modified_time","content":"2023-09-10T15:49:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java基础 - 常见考点\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-10T15:49:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DokiDoki\\",\\"url\\":\\"https://lengyue-ck.github.io/hope\\"}]}"]]},"headers":[{"level":2,"title":"== 和 equals 的区别","slug":"和-equals-的区别","link":"#和-equals-的区别","children":[]},{"level":2,"title":"两个对象的 hashCode() 相同，则 equals() 也一定为 true 吗","slug":"两个对象的-hashcode-相同-则-equals-也一定为-true-吗","link":"#两个对象的-hashcode-相同-则-equals-也一定为-true-吗","children":[]},{"level":2,"title":"为什么重写 equals() 就一定要重写 hashCode() 方法","slug":"为什么重写-equals-就一定要重写-hashcode-方法","link":"#为什么重写-equals-就一定要重写-hashcode-方法","children":[]},{"level":2,"title":"switch 语句能否作用在 byte 上，能否作用在 long 上，能否作用在 String 上","slug":"switch-语句能否作用在-byte-上-能否作用在-long-上-能否作用在-string-上","link":"#switch-语句能否作用在-byte-上-能否作用在-long-上-能否作用在-string-上","children":[]},{"level":2,"title":"& 和 && 的区别","slug":"和-的区别","link":"#和-的区别","children":[]},{"level":2,"title":"Java 中的参数传递时传值呢？还是传引用","slug":"java-中的参数传递时传值呢-还是传引用","link":"#java-中的参数传递时传值呢-还是传引用","children":[]},{"level":2,"title":"Integer 和 int 的区别","slug":"integer-和-int-的区别","link":"#integer-和-int-的区别","children":[]},{"level":2,"title":"装箱和拆箱的区别","slug":"装箱和拆箱的区别","link":"#装箱和拆箱的区别","children":[]},{"level":2,"title":"String 为什么要设计为不可变类","slug":"string-为什么要设计为不可变类","link":"#string-为什么要设计为不可变类","children":[]},{"level":2,"title":"String 类的常用方法都有那些","slug":"string-类的常用方法都有那些","link":"#string-类的常用方法都有那些","children":[]},{"level":2,"title":"final 修饰 StringBuffer 后还可以 append 吗","slug":"final-修饰-stringbuffer-后还可以-append-吗","link":"#final-修饰-stringbuffer-后还可以-append-吗","children":[]},{"level":2,"title":"final、finally、finalize 的区别","slug":"final、finally、finalize-的区别","link":"#final、finally、finalize-的区别","children":[]},{"level":2,"title":"创建对象的几种方式","slug":"创建对象的几种方式","link":"#创建对象的几种方式","children":[]},{"level":2,"title":"什么是 Java 的序列化","slug":"什么是-java-的序列化","link":"#什么是-java-的序列化","children":[]},{"level":2,"title":"如何实现 Java 的序列化","slug":"如何实现-java-的序列化","link":"#如何实现-java-的序列化","children":[]},{"level":2,"title":"什么情况下需要序列化","slug":"什么情况下需要序列化","link":"#什么情况下需要序列化","children":[]}],"git":{"createdTime":1694360994000,"updatedTime":1694360994000,"contributors":[{"name":"逆流而上","email":"1666888816@qq.com","commits":1}]},"readingTime":{"minutes":14.38,"words":4314},"filePathRelative":"interview/java/java-basic-normal.md","localizedDate":"2023年9月10日","autoDesc":true}');export{e as data};
