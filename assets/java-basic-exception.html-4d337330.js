import{_ as a,W as t,X as c,a2 as e}from"./framework-3c1374b9.js";const r={},n=e('<h1 id="java基础-异常机制" tabindex="-1"><a class="header-anchor" href="#java基础-异常机制" aria-hidden="true">#</a> Java基础 - 异常机制</h1><h2 id="try-catch-finally-如何使用" tabindex="-1"><a class="header-anchor" href="#try-catch-finally-如何使用" aria-hidden="true">#</a> try-catch-finally 如何使用？</h2><p><strong>try块</strong> ： 用于捕获异常。其后可接零个或多个 catch 块，如果没有 catch 块，则必须跟一个 finally 块。</p><p><strong>catch块</strong> ： 用于处理 try 捕获到的异常。finally 块 ： 无论是否捕获或处理异常，</p><p><strong>finally块</strong>里的语句都会被执行。当在 try 块或 catch 块中遇到 return 语句时，finally 语句块将在方法返回之前被执行。</p>',5),i=[n];function s(l,o){return t(),c("div",null,i)}const d=a(r,[["render",s],["__file","java-basic-exception.html.vue"]]);export{d as default};
